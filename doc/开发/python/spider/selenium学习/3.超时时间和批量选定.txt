页面信息获取：
    driver.title                                #获取页面的title
    driver.current_url                          #获取页面的URL地址


selenium等待元素出现的三种方式：
    1、强制等待，使用time.sleep()指定超时时间
    2、隐形等待，使用driver.implicitly_wait(30)             #隐性等待，最长等30秒
    3、显形等待，WebDriverWait(driver,60,1).until(EC.presence_of_element_located((By.CLASS_NAME, "imgitem")))



实例：爬取百度图片(selenium+phantomjs)
	#coding:utf-8
	from selenium import webdriver
	from selenium.webdriver.common.by import By
	from selenium.webdriver.support.ui import WebDriverWait
	from selenium.webdriver.support import expected_conditions as EC

	driver = webdriver.PhantomJS()                                  #调用phantomjs
	driver.get("http://image.baidu.com/")							#访问百度图片
	driver.find_element_by_id("kw").send_keys(u"美女")				#在搜索框中输入'美女'
	driver.find_element_by_class_name("s_btn").click()				#点击'百度一下'

	try:
		WebDriverWait(driver,60,1).until(EC.presence_of_element_located((By.CLASS_NAME, "imgitem")))
			#等待页面加载60s，每隔1s检查一次条件是否成立，60过后判断页面中是否有class=imgitem的标签，如果没有则抛出异常(显形等待)
		print driver.page_source			#打印源代码
		driver.close()						#关闭浏览器
	except:
		print 'error'                       #如果class=imgitem没有出现则打印error



批量操作：
    webdriver提供find_element方法定位某个特定的对象，提供find_elements定位一组元素
    
    driver.find_elements_by_class_name()
    driver.find_elements_by_tag_name()
    driver.find_elements_by_css_selector()
    driver.find_elements_by_id()
    driver.find_elements_by_link_text()
    driver.find_elements_by_partial_link_text()
    driver.find_elements_by_xpath()







































