
python：动态编译语言，目前主流版本python2和3，python2和3并不兼容，即2的代码使用3的编译器无法通过，反之亦然

python对象：
   在python中储存的所有数据都是对象，一切都是围绕对象展开
       python对象主要分为内置对象和自定义对象
	    内置对象：执行效率高，方便快捷
	  自定义对象：自由度较高
       每个对象都有一个身份，一个类型和一个值
 	  身份：即对象在内存中所处的位置，身份是不可变的
	  类型：用于描述对象内部表示以及支持的方法和操作，类型是不可变的
	    值：对象存储的数据，值分为可变值和不可变值，值得类型取决于值存储的类型	  

          创建特定类型的对象时，有时也将该对象称为该类型的实例
	  如果某个对象包含对其他对象的引用，则将其称为容器
	  大多数对象都拥有大量特有的数据属性和方法
	     属性：与对象相关的值，通常为变量
	     方法：被调用时将在对象上执行某些操作的函数，通常为函数


对象的比较：
         值比较：对象中的数值是否相等，比较符is
       身份比较：两个变量名引用的是否为同一对象，比较符id
       类型比较：两个对象的类型是否相同，比较符type
	    id：id()返回一个对象在内存中的位置
	    is：is比较两个对象的身份
	    type：type()用于返回一个对象的值
	  
python核心数据类型：
         数字：int(整数)，float(浮点数)，complex(负数)，bool(布尔型，真假，0,1)
       字符串：str，unicode
	 文件：file	
         列表：list	['aa','bb','cc']
         字典：dict	{'a':'aa','b':'bb'}
	 元组：tuple	一般情况下和list一样
	 集合：set

类型转换：
     str()：将非字符串转换为字符串
     int()：经字符串转换成整数
     ()：将字符串转换成浮点数
     lifloatst()：将字符串转换成列表
     tuple()：将字符串装换成元组
     set()：将字符串转换成集合
     dict()：创建字典


数字类型的操作：
     数字类型是不可变类型
	x+y：加法    x-y：减法      x*y：乘法  
	x/y：除法    x**y：乘方     x%y：去模


python模块属性和方法：
属性 = 变量
方法 = 函数


















