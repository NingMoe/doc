模块的基础概念：
1、可以将一个程序代码分割成多个有组织的彼此独立但有能相互交互的代码片段
2、代码通常保存为.py的文件
3、一个.py文件可以看成一个模块，一个模块也可以看成一个.py文件
4、模块也是python对象
5、每个模块顶层定义的所有变量，在导入时都成为了被导入模块的属性


程序文件：
    1、顶层文件：控制程序主要的控制流程
    2、模块文件：为顶层文件或其他模块提供各种功能


模块的导入：
    1、import：导入指定模块
        格式：import   模块名   或    import   模块名   as   模块别名
    2、from：只导入指定的模块功能，使用from导入其导入的功能在当前的命名空间
        格式：from  模块名   import  具体功能的名称

import的工作机制：
1、在指定路径下，寻找指定模块
2、在没有编译的情况下将.py文件编译成.pyc
3、生成模块的工作环境


注意：
1、模块只有在第一次被调用时才会执行以上操作，如果想二次执行需要使用reload()函数进行重载
2、使用和导入模块时，直接使用模块名即可


import查找的指定目录：
1、程序的主目录
2、系统PYTHONPATH环境变量目录(PYTHONPATH变量需要自己在系统中设置)
3、标准链接库目录
4、使用sys模块的sys.path属性可以查看和修改import的查找目录


if __name__ == '__main__':		//通常包含的是模块的自检语句


包：
1、包用于将一组模块归类到一个目录中
2、包是一个有层次性的目录结构，他有子包和模块组成
3、包必须在import的搜索目录中
4、包中必须有__init__.py文件（文件可以为空，但是必须有）
import导入包内的模块：
   格式：import  包名.子包名.模块名


















