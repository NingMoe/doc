[mysqld]
character-set-server = utf8						#默认字符集
user = mysql									#运行mysql守护进程的用户
port = 3306										#监听端口
socket = /tmp/mysql.sock						#sock文件存放位置	
basedir = /usr/local/mysql						#工作目录	
datadir = /data/mysql							#数据文件目录
log-error = /data/mysql/mysql_error.log			#错误日志文件位置	
pid-file = /data/mysql/mysql.pid				#PID文件位置
bind-address = 0.0.0.0							#监听地址
server-id = 1					#server-id
skip-name-resolve = 1			#关闭主机名反解（建议关闭）
skip-networking = 1				#禁止用于通过网络连接mysql
max_connections = 1000			#mysql允许最大连接数
max_connect_errors = 10			#客户端错误连接数			
open_files_limit = 65535		#mysql打开的最大文件句柄数
max_allowed_packet = 4M			#接受数据包的大小，可以防止内存溢出
binlog_cache_size = 1M			#事务日志记录在缓存中的大小(事务没有提交之前事务日志记录在缓存中)
read_buffer_size = 2M			#mysql读入缓冲区大小，每个连接独占内存（建议更改，可提升性能）
thread_cache_size = 8			#可以重新利用保存在缓存中线程的数量（建议更改，可提升性能）
	调整建议：
		1G  —> 8
		2G  —> 16
		3G  —> 32
		大于3G  —> 64


key_buffer_size = 4M			#指定用于索引的缓冲区大小（并不是越大越好，重点优化参数）
transaction_isolation = REPEATABLE-READ			#指定事务隔离级别
log_bin = mysql-bin				#指定二进制日志
binlog_format = mixed			#指定二进制日志格式
expire_logs_days = 365 			#删除超过365天的二进制
relay-log=relay-bin				#指定中继日志
read-only=1						#设置为只读数据库，对root用户无效(slave节点必须设置)
relay-log-purge=0				#不允许自动清理中继日志，因为MHA会依靠中继日志恢复数据
long_query_time = 5 			#慢查询时间 超过5秒则为慢查询
default-storage-engine = InnoDB #指定默认存储引擎
autocommit=0					#关闭事务自动提交（建议关闭）
innodb_file_per_table = 1		#启用InnoDB单独表空间文件
innodb_open_files = 500			#InnoDB能打开表的数量
innodb_buffer_pool_size = 1G	#InnoDB用来保存索引和原始数据的大小（重点优化参数，可以使用物理内存的80%）
innodb_read_io_threads = 4		#innodb使用后台线程处理数据的I/O请求,根据你的 CPU 核数来更改,值范围1-64
innodb_write_io_threads = 4
innodb_purge_threads = 1		#InnoDB使用单独线程回收无用的数据
innodb_flush_log_at_trx_commit = 0-2		#日志刷写频率	
	0：每秒会将重做日志缓冲写入磁盘的重做日志文件中，不论事务是否已经提交（数据可靠性最低，性能最高）
	1：每次提交事务时，将日志刷写到磁盘（数据最可靠，性能最差）
	2：每次提交事务都会写入日志，但并不会执行刷的操作。每秒会定时刷入到日志文件（数据安全性一般，性能一般）

innodb_log_buffer_size = 2M		#日志文件所用的内存大小，能提高性能，但出现故障将会丢失数据，建议设为1-8M
innodb_log_file_size = 32M		#事务日志文件的大小，更大的设置可以提高性能，会增加恢复数据库故障所需时间
innodb_log_files_in_group = 3	#mysql以循环方式将日志写入到多个文件，推荐设置为3
innodb_lock_wait_timeout = 120 	#锁表超时时间
	
	
query_cache_type 					#是否开启缓存	
	OFF: 关闭		ON: 打开	DEMAND: 只有明确写了SQL_CACHE的查询才会写入缓存
	
query_cache_size = 8M				#mysql的查询缓冲大小（并不是越大越好，重点优化参数）
query_cache_limit = 2M				#指定单个查询能够使用的缓冲区大小
query_cache_size				#缓存使用的总内存空间大小,单位是字节,这个值必须是1024的整数倍
query_cache_min_res_unit		#分配的最小内存块大小，太大可能导致内存碎片，太小可能导致频繁请求内存
query_cache_limit				#能够缓存的最大结果，如果超出这个大小则清处已经缓存的数据
query_cache_wlock_invalidate	#如果某个数据表被锁住,是否仍然从缓存中返回数据，OFF：表示可以返回



skip-locking = 1 	#避免mysql外部锁定，减少出错几率增强稳定性。
table_cache = 512	#指定表缓存的大小，当mysql访问一个表时，将此表放入缓存区，可以提高性能（并不是越大越好）
sort_buffer_size = 4M
	#查询排序时所使用的缓冲区大小。注意：分配的内存是每个连接独占，如果有10个连接，那么缓冲区大小为10×4 =40M

join_buffer_size = 8M		#联合查询操作所能使用的缓冲区大小，每个连接独占

	
	
	
http://www.jb51.net/article/28363.htm			#参考博客




