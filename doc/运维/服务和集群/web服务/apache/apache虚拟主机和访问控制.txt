在配置apache时最好删除：/etc/httpd/conf.d/welcome.conf


虚拟主机配置

使用虚拟主机，必须要禁用中心主机
禁用中心主机的方法：在主配置文件中注释DocumentRoot

虚拟主机的定义
<VirtualHost>		#定以虚拟主机的范围
     指令		#定以这个虚拟主机的属性，中心主机的绝大多数指令虚拟主机都可以使用
</VirtualHost>



基于ip的虚拟主机

最基本配置：虚拟主机可以工作
<VirtualHost 192.168.0.10:80>			#虚拟主机的ip和监听的端口
   ServerName  www.jd.com			#虚拟主机的域名
   DocumentRoot  "/var/www/www.jd.com"		#虚拟主机的网页文件存放位置
</VirtualHost>



基于端口的虚拟主机

在主配置文件中添加：Listen 8080			#定义apache监听8080端口
<VirtualHost 192.168.0.10:8080>			#虚拟主机的ip和监听的端口
   ServerName  www.taobao.com			#虚拟主机的域名
   DocumentRoot  "/var/www/www.taobao.com"	#虚拟主机的网页文件存放位置
</VirtualHost>



基于主机名的虚拟主机				#必须要有dns记录，或者本地hosts文件有记录
在主配置文件中添加：NameVietualHost  192.168.0.10:80	#定义那些ip地址使用了基于主机名的虚拟主机
<VirtualHost 192.168.0.10:80>				#虚拟主机的ip和监听的端口
   ServerName  www.bat.com				#虚拟主机的域名
   DocumentRoot  "/var/www/www.bat.com"			#虚拟主机的网页文件存放位置
</VirtualHost>




默认虚拟主机：当用户访问一个不存在的虚拟主机时，返回给用户的站点
默认虚拟主机必须定义在所有虚拟主机之前
<VirtualHost _default_:80>			#虚拟主机的ip和监听的端口
   ServerName  www.baidu.com			#虚拟主机的域名
   DocumentRoot  "/var/www/www.baidu.com"	#虚拟主机的网页文件存放位置
</VirtualHost>





访问控制实例：

<Directory "/var/www/html">		#对/var/www/html生效
	Options   None			#不启用所有选项
	Order  deny,allow		#默认允许所有客户端访问
	Deny form  192.168.1.0/24	#拒接192.168.1.0网段访问/var/www/html
</Directory>


<Directory />				#对/var/www下的所有目录和文件生效
	Options   None			#不启用所有选项
	Order  allow,deny		#默认拒接所有客户端访问
	Allow form  192.168.1.0/24	#允许192.168.1.0网段访问服务器
</Directory>





用户认证实例：
htpasswd：生成用户认证文件命令
-c：创建认证文件文件（如果用户文件已经存在则不能使用，否则将清空用户认证文件）
-m：指定md5的加密方法

语法格式：
htpasswd -c -m  /etc/httpd/conf   root   #创建用户认证文件，并添加root用户（注意：这儿的root用户的系统无关）
htpasswd -m  /etc/httpd/conf   mysql	#向用户认证文件中添加mysql用户


<Directory "/var/www/html">		#访问/var/www/html时需要验证（和上面一样同样有全局配置）
	Options   None					#不启用说有选项
	Order  allow,deny				#默认拒接所有客户端访问
	Allow form  all     			#允许所有用户访问服务器
	AllowOverride  AuthConfig		#启用用户认证访问
	AuthType  basic   				#验证类型，基本
	AuthName  "登录框的说明"		#定义说明
	AuthUserFile  "用户认证文件"	#定义认证文件（认证文件必须放在apache有读取权限的地方）
	Require	valid-user				#允许用户认证文件中的所有用户访问
</Directory>






