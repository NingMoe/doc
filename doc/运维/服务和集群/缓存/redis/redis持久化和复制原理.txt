Redis提供了两种不同的持久化方式：
	RDB：在指定的时间间隔内生成数据快照，以二进制进行存储
	AOF：记录服务器执行的所有写操作命令，并在服务器启动时，通过重新执行这些命令来还原数据集新命令会被追加到文件的末尾,每隔一段时间在后台对AOF文件进行重写使AOF文件的体积不会超出保存数据所需实际大小	
	Redis还可以同时使用AOF和RDB，在这种情况下，当Redis重启后，它会优先使用AOF文进行数据还原，因为AOF文件保存的数据通常比RDB保存的数据更完整，通常AOF和RDB协同工作，在一定程度上弥补了他们的缺点
	
	
RDB的优缺点：
	优点：
		1、文件紧凑，它保存了Redis在某个时间点上的数据集，非常适合用于进行备份	2、可以最大化Redis的性能，父进程在保存RDB文件时唯一要做的就是fork出一个子进程，然后这个子进程就会处理接下来的所有持久化工作，父进程无须执行任何磁盘 I/O 操作
		3、在恢复数据量比较大时速度比AOF的恢复速度快
	缺点：
		1、无法实时备份，在服务器出现故障时可能会丢失部分数据
		2、由于使用子进程进行数据持久化，当数据比较大的时候可能会占用比较多的cpu资源
		3、每一次都是完整备份，而无法实现增量备份
		
AOF的优缺点：
	优点：
		1、实时的记录了redis的写操作，在服务器出现故障时基本不会造成数据丢失
		2、在AOF文件体积过大时，自动地在后台对AOF进行重写，重写后的AOF文件包含了恢复数据所需的最小命令集
		3、AOF以Redis协议的格式进行保存，可读性好，对文件进行分析也很轻松
	缺点：
		1、AOF文件的体积通常要大于RDB文件的体积
		2、AOF的恢复速度通常慢于RDB

	AOF文件的重写过程：
		AOF文件体积在达到一定程度时会在后台启动AOF文件重写功能通过fork打开一个子进程，这个进程器读取整个redis的数据内容，将他生成一个新的AOF文件，在AOF文件重写是产生的写操作记录两份，一份直接写入的旧的AOF文件中，一份放入缓存区，当AOF文件重写完成之后替换掉旧的AOF文件并将缓存区的写操作追加到新的AOF文件中
	
	
	复制特点：
		1、Redis使用异步非阻塞进行复制
		2、一主可以有多从，从服务器也可以有从服务器
		3、可以通过复制让主服务器免于不用持久化，由从服务器去执行持久化操作(不建议这么使用)
	
	复制过程：
		1、slave向主服务器发起同步请求	2、master执行bgsave生成镜像文件，在这个过程中产生的新数据会存入缓存区，当bgsave执行完毕后生成一个.rbd文件，master将.rbd文件和缓存区的数据发送给slave，slave收到master的数据后将这些数据存入本地硬盘，slave从本地硬盘中载入数据到内存
		3、即使有多个slave同时向主服务器发送同步请求，master也只需执行一次bgsave
	
	
	
	
	
	
	
	
	
	
	
	
	
	