docker数据管理

Docker管理数据主要有两种方式：
	数据卷
	数据卷容器


数据卷是一个可供一个或多个容器使用的特殊目录：数据卷的使用，类似于Linux下的mount操作
	1、数据卷可以在容器之间共享和重用
	2、对数据卷的修改会立马生效
	3、对数据卷的更新，不会影响镜像
	4、卷会一直存在，直到没有容器使用

	docker run -itd -v /data/:/data1/ ubuntu bash		#将/data挂载到docker的/data1/目录，/data1/不存在则会自动创建
	docker run -itd -v /data/:/data1 --name testname ubuntu bash		#创建容器时指定name，如果不指定则生成随机name
	
	Docker 挂载数据卷的默认权限是读写，用户也可以通过  :ro 指定为只读。
	sudo docker run -itd --name testname2 -v /data/:/data1/:ro

	
	
数据卷容器
	如果容器之间需要共享一些持续更新的数据，最简单的方式就是是用户数据卷容器
	数据卷容器就是一种普通容器，专门提供数据卷供其它容器挂载使用
	
	docker run -it -v /testdata --name dbdata ubuntu /bin/bash				#创建一个容器作为数据卷容器
	docker run -it --volumes-from dbdata --name test1 ubuntu		#--volumes-from挂载其他容器，容器的/testdata为共享目录
	docker run -it --volumes-from dbdata --name test2 ubuntu		#两个容器间共享(可以更多的容器共享)
	
	
	如果删除了挂载的容器，数据卷并不会被自动删除。如果要删除一个数据卷，必须在删除最后一个还挂载着它的容器时使用docker rm -v 命令来指定同时删除关联的容器，这可以让用户在容器之间升级和移动数据卷。
	
	
数据卷容器备份
	docker run --volumes-from dbdata -v $(pwd):/backup ubuntu tar cvf /backup/backup.tar /testdata	#在当前目录下备份数据卷容器
	
	dbdata：数据卷容器	 $(pwd):/backup：获取当前目录位置并赋值给/backup   /backup/backup.tar：在当前目录下创建backup.tar
	/testdata：数据在容器中的位置
	
	docker run --volumes-from dbdata -v /mnt:/mnt ubuntu:16.04 tar cvf /mnt/backup.tar /testdata	#备份在指定目录中
	

数据卷容器恢复
	如果要恢复数据到一个容器，首先创建一个带有数据卷的容器 dbdata2。
	docker run -it -v /dbdata --name dbdata2 ubuntu /bin/bash
	
	然后创建另一个容器，挂载 dbdata2 的容器，并使用  untar  解压备份文件到挂载的容器卷中。
	docker run --volumes-from dbdata2 -v $(pwd):/backup --name test5 ubuntu tar zcf /backup/backup.tar.gz /dbdata
	
	
	
	
	
	

	
	